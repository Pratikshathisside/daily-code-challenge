class Solution {
    private:
    void inorder(TreeNode* root, vector<int>& in){
        if(root==NULL){
            return;
        }
        inorder(root->left, in);
        in.push_back(root->val);
        inorder(root->right, in);
    }
    TreeNode* inordertoBST( int s, int e, vector<int> & in){
        if(s>e){
            return NULL;
        }
        int mid = (s+e)/2;
        TreeNode* root = new TreeNode(in[mid]);
        root->left = inordertoBST(s,mid-1,in);
        root->right= inordertoBST(mid+1,e,in);
        return root;
    }
public:
    TreeNode* balanceBST(TreeNode* root) {
        vector<int>in;
        inorder(root, in);
        int e = in.size() -1;
        TreeNode* ans = inordertoBST(0,e,in);
        return ans;
        
    }
};
