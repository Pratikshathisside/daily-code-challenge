#include <bits/stdc++.h> 
/*************************************************************

    Following is the Binary Tree node structure

    template <typename T>

    class BinaryTreeNode
    {
    public :
        T data;
        BinaryTreeNode<T> *left;
        BinaryTreeNode<T> *right;

        BinaryTreeNode(T data) {
            this -> data = data;
            left = NULL;
            right = NULL;
        }

        ~BinaryTreeNode() {
            if (left)
            {
                delete left;
            }
            if (right)
            {
                delete right;
            }
        }
    };

*************************************************************/

pair<int,int> predecessorSuccessor(BinaryTreeNode<int>* root, int key)
{
    // Write your code here.
    //find key
    int succ = -1;
    int pred = -1;
    BinaryTreeNode<int>* temp = root;
    while(temp->data!=key){
        if(temp->data>key){
            succ = temp->data;
            temp = temp->left;
            
            
        }
        if(temp->data<key){
            pred = temp ->data;
            temp = temp->right;
        }
    }
    BinaryTreeNode<int>*leftree = temp->left;
    while(leftree!=NULL){
        pred = leftree->data;
        leftree= leftree->right;
    }
    BinaryTreeNode<int>*rightree = temp->right;
    while(rightree!=NULL){
        succ = rightree->data;
        rightree = rightree->left;
    }
    pair<int,int> ans = make_pair(pred,succ);
    return ans;
}
